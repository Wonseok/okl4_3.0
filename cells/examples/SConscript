from kenge import OKL4Cell
from opts import get_option_arg

Import("*")

#############################################################################
## Build okl4
#############################################################################
examples_env = build.KengeCell(OKL4Cell, args.get("example_name", "examples"))

has_serial = args.get("has_serial", True)
del args["has_serial"]

examples_env.process_global_config()

# Get serial device details
serial_driver = None
timer_driver = None
if examples_env.machine.device_core is not None:
    for (driver, server, memory, interrupt) in examples_env.machine.v2_drivers:
        if server == "vserial" and has_serial:
            serial_driver = driver
        if server == "vtimer" and has_serial:
            timer_driver = driver

examples_env.Package("libs/compat")
examples_env.Package("libs/soc", buildname="soc")
examples_env.Package("libs/c", serial_driver=serial_driver)
if examples_env.toolchain.type == "gnu":
    examples_env.Package("libs/gcc")
if examples_env.toolchain.type == "rvct":
    if serial_driver:
        examples_env.Package("libs/rvct", buildname="c", serial_driver=serial_driver)
    else:
        examples_env.Package("libs/rvct", buildname="c")

# Include kernel-specific libraries.
examples_env.Package("libs/l4")
examples_env.Package("libs/l4e")
examples_env.Package("libs/check")
examples_env.Package("libs/ktest")
examples_env.Package("libs/mutex")
examples_env.Package("libs/atomic_ops")
examples_env.Package("libs/okl4")
examples_env.Package("libs/queue")
examples_env.Package("libs/util")
examples_env.Package("libs/driverv2")


if serial_driver:
    examples_env.Package("drivers/%s" % serial_driver)
    examples_env.Package("libs/vserial", serial_driver=serial_driver)
    examples_env.add_use_device(None, ["serial_dev"])

    # Test device depends on v2 drivers
    examples_env.add_use_device(None, ["test_dev"])

if timer_driver:
    examples_env.Package("drivers/%s" % timer_driver)
    examples_env.Package("libs/vtimer",  timer_driver= timer_driver)
    examples_env.add_use_device(None, ["timer_dev"])

##################################
example = args.get("example_name", "examples")
del args["example_name"]
examples_env.Package("examples/%s" % example, serial_driver=serial_driver, timer_driver=timer_driver)

examples_env.Append(CPPDEFINES=["THREAD_SAFE"])


# Arguments to main function.
if example == "hello":
    args = []
    build.expect_test_data = [ (["Hello, world!"], None) ] \
                                + build.expect_test_data
elif example == "args":
    args = ["Hello", "World!"]
    build.expect_test_data = [ (["[Hello][World!]"], None) ] \
                                + build.expect_test_data
if example == "adder":
    args = []
    build.expect_test_data = [ (["adder...!"], None) ] \
                                + build.expect_test_data
elif example == "pingpong":
    args = ["100"]
    build.expect_test_data = [ (["Ping-Pong complete. Exiting..."], None) ] \
                                + build.expect_test_data
elif example == "chatterbox":
    args = ["100"]
    build.expect_test_data = [ (["deserunt mollit anim id est laborum"], None) ] \
                                + build.expect_test_data

examples_env.set_cell_config(spaces = 256, clists = 256, mutexes = 256, args = args)

Return("examples_env")
